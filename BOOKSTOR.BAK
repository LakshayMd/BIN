#include<fstream.h>
#include<process.h>
#include<iomanip.h>
#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<graphics.h>
#include<string.h>
#include<dos.h>
#define print(i) cout<<setw((80+strlen(i))/2)<<i
class Book
{
	long ID;
	char name[70];
	char author[30];
	int tag[3];
	int quantity;
	float price;
	public:
	void show();
	char * retauth()
	{
		return author;
	}
	long retid()
	{
		return ID;
	}
	char * retname()
	{
		return name;
	}
};
class Transaction
{
	long ID;
	long bookID[10];
	int quantity[10];
	int price[10];
	int total;
};
class tag
{
	int ID;
	char name[20];
};
void passout(int len,int errcode=0)
{	 //errcode=0 for no error, 1 for incorrect pass, 2 for invalid char
	clrscr();
	cout<<"\n\n\n\n\n\n\n\n\n\n\n";
	if(errcode==1)
		print("Incorrect password, try again");
	else if(errcode==2)
		print("Invalid character");
	cout<<endl<<setw((80+strlen("Enter password (esc to quit) : ")-len)/2)<<"Enter password (esc to quit) : ";
	for(int i=len;i>0;i--)
	{
		cout<<"*";
	}
}
int pass(int retry=1)
{
	clrscr();
	char c,pass[20]="",code[20];
	passout(0,retry);
	retry=0;
	for (int i=0;pass[i-1]!='\0'&&i<20;i++)
	{
		c=getch();
		switch(c)
		{
			case 27:
				exit(0);
				break;
			case '\b':
				pass[i-1]='\0';
				i-=2;
				passout(strlen(pass));
				break;
			case '\r':
				pass[i]='\0';
				break;
			case '\0'://so that arrow keys etc dont create glitches
				getch();
				passout(strlen(pass),2);
				i--;
				break;
			default:
				pass[i]=c;
				passout(strlen(pass));
		}
	}
	ifstream fin;
	fin.open("encryp.txt");
	fin.getline(code,20);
	fin.close();
	return strcmp(pass,code); //password to be entered to proceed
}
int findauth(Book b[],char * str,int start=0)
{
	ifstream fin;
	fin.open("booklist.dat",ios::binary);
	int i=0;
	while(fin.read((char *)&b[(i-start)%10],sizeof(b[i]))&&i<(start+10))
	{
		if(strstr(b[i].retauth(),str)!=NULL)
			i++;
	}
	fin.close();
	return i-start;
}
void compsearchout(Book b[],char str[]="",int range=0,int select=-1)
{
	cout<<'\n';
	print("Search:")<<'\n';
	print(str)<<"\n\n";
	for(int i=0;i<=range;i++)
		{}//b[i].show();
}
void searchauth(int type=0)
{
	clrscr();
	int start=0,range=0,select=-1;
	char c,search[30]="";
	Book result[10];
	if(type==1)
		compsearchout(result);
	for (int i=0;search[i-1]!='\0'&&i<20;i++)
	{
		c=getch();
		switch(c)
		{
			case 27:
				break;
			case '\b':
				search[i-1]='\0';
				i-=2;
				if(!strcmp(search,""))
					range=findauth(result,search,start);
				if(type==1)
					compsearchout(result,search,range,select);
				else {}
					//specsearch(3,search,result);
				break;
			case '\r':
				search[i]='\0';
				break;
			case '\0'://so that arrow keys etc dont create glitches
				getch();
				//passout(strlen(pass),2);
				i--;
				break;
			default:
				search[i]=c;
				if(!strcmp(search,""))
					range=findauth(result,search,start);
				if(type==1)
					compsearchout(result,search,range,select);
				else {}
					//specsearch(3,search,result);
		}
	}
}
void search()
{
	clrscr();
	cout<<"\n\n\n\n";
	print("Search")<<"\n\n\n\n";
	print("Press 1              to search by ID")<<"\n\n";
	print("Press 2            to search by name")<<"\n\n";
	print("Press 3          to search by author")<<"\n\n";
	print("Press 4             to search by tag")<<"\n\n";
	print("Press 5           to search by price")<<"\n\n";
	print("Press Esc          to return to home")<<"\n\n"<<setw(40);
	char ch=getch();
	switch(ch)
	{
		case '1':
			break;
		case '2':
			break;
		case '3':
			searchauth(1);
			break;
		case '4':
			break;
		case '5':
			break;
		case 27:
			break;
		case '\0':
			getch();
		//default:
	}
}
int menu()
{
	clrscr();
	cout<<"\n\n\n\n";
	print("XD Book Shop")<<"\n\n\n";
	print("Press 1         to add book to stock")<<"\n\n";
	print("Press 2         to search for a book")<<"\n\n";
	print("Press 3               to manage cart")<<"\n\n";
	print("Press 4                  to checkout")<<"\n\n";
	print("Press 5         to view transactions")<<"\n\n";
	print("Press 6           to change password")<<"\n\n";
	print("Press Esc        to log out and quit")<<"\n\n"<<setw(40);
	char ch=getch();
	switch(ch)
	{
		case '\0':
			getch();
			return 1;
		case '1':
			return 1;
		case '2':
			search();
			return 1;
		case '3':
			return 1;
		case '4':
			return 1;
		case '5':
			return 1;
		case '6':
			return 1;
		case 27:
			return 0;
		default:
			return 1;
	}
}
void main()
{
	if(pass(0))
		while(pass());
	clrscr();
	cout<<"\n\n\n\n\n\n\n\n\n\n\n\n";
	print("Successfully logged in");
	delay(700);
	while(menu());
	clrscr();
	cout<<"\n\n\n\n\n\n\n\n\n\n\n\n";
	print("Successfully logged out");
	delay(700);
}